name: Weekly Pokemon TCG Pocket Meta Analysis

# GitHub Actions permissions
permissions:
  contents: write
  actions: read
  packages: read

on:
  schedule:
    # ÊØéÈÄ±ÈáëÊõúÊó•15:00 JST (UTC: 6:00)
    - cron: '0 6 * * 5'
  workflow_dispatch: # ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ

jobs:
  weekly-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: |
          echo "üé≠ Installing Playwright browsers..."
          npx playwright install --with-deps chromium
          echo "‚úÖ Playwright installation complete"

      - name: Run weekly meta analysis
        run: |
          echo "üöÄ Starting weekly meta analysis..."
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Available memory: $(free -h)"
          echo "Disk space: $(df -h)"
          npm run weekly-report || {
            echo "‚ùå Main scraping failed, attempting fallback with existing data..."
            if [ -f "data/latest.json" ]; then
              echo "üìä Using existing data for analysis..."
              node -e "
                const { generateWeeklyReport } = require('./dist/weekly-report.js');
                console.log('üîÑ Running analysis with existing data...');
                // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÂá¶ÁêÜ„ÅØÊó¢Â≠ò„Éá„Éº„Çø„ÅßÂÆüË°å„Åï„Çå„Çã
              " || echo "‚ùå Fallback also failed"
            else
              echo "‚ùå No existing data available for fallback"
              exit 1
            fi
          }
        env:
          TZ: 'Asia/Tokyo'
          NODE_ENV: production
          DEBUG: 'pw:*'
        timeout-minutes: 25

      - name: Commit and push results
        if: always()  # „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Å¶„ÇÇ„Éá„Éº„Çø„Åå„ÅÇ„Çå„Å∞„Ç≥„Éü„ÉÉ„Éà
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          git add weekly-reports/
          
          # Â§âÊõ¥„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          REPORT_DATE=$(TZ=Asia/Tokyo date +'%Y-%m-%d')
          git commit -m "üóìÔ∏è Weekly Report: $REPORT_DATE

          üìä Environment-Adaptive Meta Score Analysis
          üìÖ Generated: $(TZ=Asia/Tokyo date +'%Y/%m/%d %H:%M')
          üéØ Coverage: 80% environment coverage analysis
          ‚öîÔ∏è Matchup data: Full collection
          ü§ñ Generated with Claude Code"
          
          git push
        env:
          TZ: 'Asia/Tokyo'

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: weekly-${{ github.run_number }}
          name: "ÈÄ±Ê¨°Áí∞Â¢ÉÂàÜÊûê„É¨„Éù„Éº„Éà - ${{ github.run_date }}"
          body: |
            ## üóìÔ∏è ÈÄ±Ê¨°„Éù„Ç±„É¢„É≥„Ç´„Éº„ÉâÁí∞Â¢ÉÂàÜÊûê„É¨„Éù„Éº„Éà
            
            **ÁîüÊàêÊó•ÊôÇ**: ${{ github.run_date }}
            **Áí∞Â¢ÉÈÅ©ÂøúÂûã„É°„Çø„Çπ„Ç≥„Ç¢ÁÆóÂá∫Ê≥ï„Å´„Çà„ÇãÂàÜÊûê**
            
            ### üìä ÂàÜÊûêÂÜÖÂÆπ
            - ‚úÖ 80%„Ç´„Éê„É¨„ÉÉ„Ç∏ÂØæÂøú„Éá„Éº„ÇøÂèéÈõÜ
            - ‚úÖ ÂÖ®Áõ∏ÊÄß„Éá„Éº„ÇøÂèéÈõÜ
            - ‚úÖ Èö†„ÇåÂº∑„Éá„ÉÉ„Ç≠Áô∫Ë¶ã
            - ‚úÖ „Éà„Éº„Éä„É°„É≥„ÉàÊé®Â•®ÊßãÊàê
            
            ### üìÇ Âá∫Âäõ„Éï„Ç°„Ç§„É´
            - `data/latest_report.md` - Ë©≥Á¥∞ÂàÜÊûê„É¨„Éù„Éº„Éà
            - `data/latest.json` - Áîü„Éá„Éº„Çø
            - `weekly-reports/` - ÈÄ±Ê¨°„Ç¢„Éº„Ç´„Ç§„Éñ
            
            ---
            ü§ñ *Áí∞Â¢ÉÈÅ©ÂøúÂûã„É°„Çø„Çπ„Ç≥„Ç¢ÁÆóÂá∫Ê≥ï„Å´„Çà„ÇãËá™ÂãïÂàÜÊûê*
          draft: false
          prerelease: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: analysis-results-${{ github.run_number }}
          path: |
            data/*.json
            data/*.md
            data/*.csv
            weekly-reports/*
          retention-days: 90

      - name: Local sync notification
        run: |
          echo "üîÑ Local sync ready - run 'npm run local-sync' to sync data to local machine"
          echo "üìÅ Data available in:"
          echo "  - data/latest.json"
          echo "  - data/latest_report.md" 
          echo "  - weekly-reports/"
          
      - name: Clean old files
        run: |
          echo "üßπ Cleaning old files..."
          npm run clean || echo "Clean script not found, continuing..."
          node -e "
          const { DataStorage } = require('./dist/storage/database.js');
          const storage = new DataStorage();
          storage.cleanOldFiles(30).then(() => {
            console.log('‚úÖ Old files cleaned');
          }).catch((error) => {
            console.log('‚ö†Ô∏è Clean old files failed:', error.message);
          });
          " || echo "‚ö†Ô∏è Old files cleanup failed, continuing..."

  # „É¨„Éù„Éº„ÉàÂìÅË≥™„ÉÅ„Çß„ÉÉ„ÇØ
  quality-check:
    needs: weekly-analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check report completeness
      run: |
        echo "üìã Checking report completeness..."
        pwd
        ls -la
        
        # „É¨„Éù„Éº„Éà„ÅÆÂøÖÈ†àË¶ÅÁ¥†„Çí„ÉÅ„Çß„ÉÉ„ÇØ
        if [ -f "data/latest_report.md" ]; then
          echo "‚úÖ Report file exists"
          
          # ÂøÖÈ†à„Çª„ÇØ„Ç∑„Éß„É≥„ÅÆÁ¢∫Ë™ç
          grep -q "„Ç∑„Çß„Ç¢Á∂≤ÁæÖÁéá" data/latest_report.md && echo "‚úÖ Share coverage included" || echo "‚ùå Share coverage missing"
          grep -q "TierË°®" data/latest_report.md && echo "‚úÖ Tier table included" || echo "‚ùå Tier table missing"
          grep -q "Áí∞Â¢ÉÈÅ©ÂøúÂûã" data/latest_report.md && echo "‚úÖ Environmental analysis included" || echo "‚ùå Environmental analysis missing"
          
          # „Éá„Éº„ÇøÂÆåÂÖ®ÊÄß„ÉÅ„Çß„ÉÉ„ÇØ
          if [ -f "data/latest.json" ]; then
            echo "Data completeness check:"
            node -e "
            const fs = require('fs');
            try {
              const data = JSON.parse(fs.readFileSync('data/latest.json', 'utf-8'));
              console.log('Total decks:', data.decks?.length || 0);
              console.log('Share coverage:', (data.coverage || 0).toFixed(2) + '%');
              
              if ((data.coverage || 0) >= 75) {
                console.log('‚úÖ Good coverage achieved (75%+)');
              } else {
                console.log('‚ö†Ô∏è Coverage below target (75%+)');
              }
            } catch (e) {
              console.log('‚ùå Data format error:', e.message);
              process.exit(1);
            }
            "
          fi
        else
          echo "‚ùå Report file not found"
          exit 1
        fi